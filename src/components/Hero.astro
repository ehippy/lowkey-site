---
// Hero component for Lowkey landing page
---

<section class="hero">
	<div class="container">
		<div class="hero-content">
			<h1 class="hero-title text-balance">
				Quiet reminders to show up in your relationship
			</h1>
			<p class="hero-subtitle text-balance">
				Gentle, personalized nudges to help you be more thoughtful. 
				Small gestures, big impact. No pressure, just care.
			</p>
			<div class="hero-cta">
				<div class="email-signup">
					<form id="email-form" class="email-form">
						<input 
							type="email" 
							id="email" 
							name="email" 
							placeholder="Enter your email" 
							required 
							class="email-input"
						>
						<button type="submit" class="btn btn-primary">
							Get notified
						</button>
					</form>
					<p class="form-note">
						Be the first to know when Lowkey launches. No spam, just updates.
					</p>
				</div>
			</div>
		</div>
		<div class="hero-visual">
			<div class="phone-mockup">
				<div class="phone-frame">
					<div class="phone-screen">					<div class="notification-demo">
						<div class="notification" id="demo-notification">
							<div class="notification-icon">üíù</div>
							<div class="notification-content">
								<div class="notification-title">Gentle reminder</div>
								<div class="notification-text">
									Send Sarah a photo of something that reminded you of her today
								</div>
							</div>
						</div>
					</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</section>

<style>
	.hero {
		padding: 4rem 0 6rem;
		background: linear-gradient(135deg, #faf8f5 0%, #f5f1eb 100%);
		min-height: 100vh;
		display: flex;
		align-items: center;
	}

	.hero .container {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 4rem;
		align-items: center;
	}

	.hero-title {
		font-size: 3.5rem;
		font-weight: 600;
		margin-bottom: 1.5rem;
		color: var(--color-text);
		line-height: 1.1;
	}

	.hero-subtitle {
		font-size: 1.25rem;
		color: var(--color-text-light);
		margin-bottom: 2.5rem;
		max-width: 500px;
	}

	.email-form {
		display: flex;
		gap: 0.75rem;
		margin-bottom: 1rem;
		max-width: 400px;
	}

	.email-input {
		flex: 1;
		padding: 0.75rem 1rem;
		border: 1px solid #d7c4a8;
		border-radius: var(--border-radius);
		font-size: 1rem;
		background-color: var(--color-surface);
		transition: border-color 0.2s ease, box-shadow 0.2s ease;
	}

	.email-input:focus {
		outline: none;
		border-color: var(--color-accent);
		box-shadow: 0 0 0 3px rgb(160 132 92 / 0.1);
	}

	.form-note {
		font-size: 0.875rem;
		color: var(--color-text-lighter);
		max-width: 400px;
	}

	.hero-visual {
		display: flex;
		justify-content: center;
		align-items: center;
	}

	.phone-mockup {
		position: relative;
	}

	.phone-frame {
		width: 280px;
		height: 560px;
		background: var(--color-earth);
		border-radius: 32px;
		padding: 16px;
		box-shadow: 
			0 20px 25px -5px rgb(62 39 35 / 0.2), 
			0 10px 10px -5px rgb(62 39 35 / 0.1);
	}

	.phone-screen {
		width: 100%;
		height: 100%;
		background: linear-gradient(180deg, var(--color-earth) 0%, #4a3d2a 100%);
		border-radius: 20px;
		padding: 2rem 1.5rem;
		display: flex;
		align-items: center;
		justify-content: center;
	}

	.notification-demo {
		width: 100%;
	}

	.notification {
		background: rgba(255, 255, 255, 0.95);
		border-radius: 16px;
		padding: 1rem;
		display: flex;
		gap: 0.75rem;
		align-items: flex-start;
		box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
		backdrop-filter: blur(10px);
		animation: fadeInSlide 6s ease-in-out infinite;
		opacity: 1;
		transform: translateY(0);
		transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
	}

	.notification-icon {
		font-size: 1.5rem;
		flex-shrink: 0;
	}

	.notification-content {
		flex: 1;
		min-width: 0;
	}

	.notification-title {
		font-weight: 600;
		color: var(--color-text);
		font-size: 0.875rem;
		margin-bottom: 0.25rem;
	}

	.notification-text {
		color: var(--color-text-light);
		font-size: 0.8rem;
		line-height: 1.4;
	}

	@keyframes fadeInSlide {
		0%, 15%, 100% {
			opacity: 1;
			transform: translateY(0);
		}
		2%, 13% {
			opacity: 0.3;
			transform: translateY(-5px);
		}
	}

	@media (max-width: 768px) {
		.hero {
			padding: 2rem 0 4rem;
			min-height: auto;
		}

		.hero .container {
			grid-template-columns: 1fr;
			gap: 3rem;
			text-align: center;
		}

		.hero-title {
			font-size: 2.5rem;
		}

		.hero-subtitle {
			font-size: 1.1rem;
			margin: 0 auto 2rem;
		}

		.email-form {
			flex-direction: column;
			margin: 0 auto 1rem;
		}

		.phone-frame {
			width: 240px;
			height: 480px;
		}

		.notification {
			padding: 0.75rem;
		}

		.notification-text {
			font-size: 0.75rem;
		}
	}
</style>

<script>
	document.addEventListener('DOMContentLoaded', function() {
		// Email form functionality
		const form = document.getElementById('email-form');
		const emailInput = document.getElementById('email');
		
		if (form && emailInput) {
			form.addEventListener('submit', function(e) {
				e.preventDefault();
				
				const email = emailInput.value.trim();
				if (!email) return;
				
				// Here you would integrate with your email service
				// For now, we'll just show a success message
				console.log('Email submitted:', email);
				
				// Simple success feedback
				const button = form.querySelector('button');
				const originalText = button.textContent;
				button.textContent = 'Thank you!';
				button.style.backgroundColor = '#b8956b';
				
				setTimeout(() => {
					button.textContent = originalText;
					button.style.backgroundColor = '';
					emailInput.value = '';
				}, 2000);
			});
		}

		// Notification rotation functionality
		const notifications = [
			{
				icon: 'üíù',
				title: 'Gentle reminder',
				text: 'Send Sarah a photo of something that reminded you of her today'
			},
			{
				icon: '‚òï',
				title: 'Morning thought',
				text: 'Text Emma "good morning beautiful" before she starts her day'
			},
			{
				icon: 'üå∏',
				title: 'Sweet gesture',
				text: 'Leave a little note in Alex\'s laptop bag for tomorrow'
			},
			{
				icon: 'üìö',
				title: 'Show interest',
				text: 'Ask Jordan how her book club meeting went last night'
			},
			{
				icon: 'üéµ',
				title: 'Share a moment',
				text: 'Send that song that made you think of Maya this morning'
			},
			{
				icon: 'üåü',
				title: 'Appreciation',
				text: 'Tell Chris one specific thing you appreciated about them today'
			},
			{
				icon: 'üçÉ',
				title: 'Spontaneous care',
				text: 'Bring Riley their favorite tea when you get home tonight'
			},
			{
				icon: 'üí≠',
				title: 'Check in',
				text: 'Ask Sam how they\'re feeling about that work presentation tomorrow'
			},
			{
				icon: 'üåô',
				title: 'Evening connection',
				text: 'Share one highlight from your day with Taylor before bed'
			},
			{
				icon: 'ü§ó',
				title: 'Physical touch',
				text: 'Give Morgan a 20-second hug when you see them next'
			}
		];

		let currentIndex = 0;
		const notificationElement = document.getElementById('demo-notification');
		
		if (notificationElement) {
			function updateNotification() {
				const notification = notifications[currentIndex];
				const icon = notificationElement.querySelector('.notification-icon');
				const title = notificationElement.querySelector('.notification-title');
				const text = notificationElement.querySelector('.notification-text');
				
				// Fade out
				notificationElement.style.opacity = '0';
				notificationElement.style.transform = 'translateY(-5px)';
				
				setTimeout(() => {
					// Update content
					if (icon) icon.textContent = notification.icon;
					if (title) title.textContent = notification.title;
					if (text) text.textContent = notification.text;
					
					// Fade in
					notificationElement.style.opacity = '1';
					notificationElement.style.transform = 'translateY(0)';
					
					// Move to next notification
					currentIndex = (currentIndex + 1) % notifications.length;
				}, 250);
			}

			// Start the rotation after initial load
			setTimeout(() => {
				setInterval(updateNotification, 4000); // Change every 4 seconds
			}, 2000); // Wait 2 seconds before starting rotation
		}
	});
</script>
